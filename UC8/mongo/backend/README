#npm install express mongoose bcryptjs jsonwebtoken dotenv cors
#node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# ✅ 1. Registro de usuário
# curl -X POST http://localhost:3000/auth/registro -H "Content-Type: application/json" -d "{\"nome\":\"João\",\"email\":\"joao@email.com\",\"senha\":\"123456\"}"


#✅ 2. Login do usuário (gera o token JWT)
# curl -X POST http://localhost:3000/auth/login -H "Content-Type: application/json" -d "{\"email\":\"joao@email.com\",\"senha\":\"123456\"}"
#O retorno será algo como: { "token": "eyJhbGciOiJIUzI1NiIsInR5cCI..." }

#✅ 3. Cadastrar um aluno
# curl -X POST http://localhost:3000/alunos -H "Content-Type: application/json" -H "Authorization: Bearer SEU_TOKEN_AQUI" -d "{\"aluno\":\"Aretusa Matusalem\",\"curso\":\"Matemática\",\"semestre\":3,\"instituicao\":\"UFC\",\"media\":7.8}"

#✅ 4. Listar todos os alunos
# curl -X GET http://localhost:3000/alunos -H "Authorization: Bearer SEU_TOKEN_AQUI"

# curl -X GET http://localhost:3000/alunos -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNjYyYmYxZmYyZTVhNzM1ODZkZiIsImlhdCI6MTc0OTE2NDE1NiwiZXhwIjoxNzQ5MjUwNTU2fQ.YTFFr3G5ra8BD10g2953R-lMht4xT9F4ZGbmTz4DsaU"


#✅ 5. Buscar aluno por nome (ex: Aretusa Matusalem)
# curl -X GET http://localhost:3000/alunos/Aretusa%20Matusalem -H "Authorization: Bearer SEU_TOKEN_AQUI"

#✅ 6. Atualizar aluno (use o ID real retornado no cadastro)
#curl -X PUT http://localhost:3000/alunos/ID_DO_ALUNO -H "Content-Type: application/json" -H "Authorization: Bearer SEU_TOKEN_AQUI" -d "{\"media\":8.5,\"semestre\":4}"

#✅ 7. Deletar aluno (use o ID real também)
# curl -X DELETE http://localhost:3000/alunos/ID_DO_ALUNO -H "Authorization: Bearer SEU_TOKEN_AQUI"


eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNjYyYmYxZmYyZTVhNzM1ODZkZiIsImlhdCI6MTc0OTE2NDE1NiwiZXhwIjoxNzQ5MjUwNTU2fQ.YTFFr3G5ra8BD10g2953R-lMht4xT9F4ZGbmTz4DsaU